openapi: 3.0.0
info:
  title: Level Up! Service
  description:
    This is a microservice that contains all CRUD functionality for the Level Up! rewards system.
  version: 0.0.1
servers:
  - url: 'http://localhost:7001'
    description: Localhost - Port No. 7001
paths:
  /levelup:
    get:
      summary: Retrieves All LevelUp entries from the database
      responses:
        '200':
          description: A list of LevelUp entries.
          content:
            array:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LevelUp'
    post:
      summary: Creates a new LevelUp entry.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LevelUp'
      responses:
        '201':
          description: An LevelUp entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelUp'
        '422':
          description: Incomplete LevelUp information.
          
  /levelup/{id}:
    get:
      summary: Retrieves the LevelUp entry with the given ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the LevelUp entry you would like to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: A LevelUp Entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelUp'
        '404':
          description: LevelUp Entry ID cannot be found in DB.
    
    delete:
      summary: Deletes the LevelUp Entry with the given ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the LevelUp Entry you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: success message.
          content:
            text/plain:
              schema:
                type: string
                example: "LevelUp! [1] deleted successfully!"
        '404':
          description: LevelUp Entry ID cannot be found in DB.
          
    put:
      summary: Update the LevelUp Entry with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the LevelUp Entry you want to update
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LevelUp'
      responses:
        '200':
          description: A LevelUp Entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelUp'
        '404':
          description: LevelUp Entry ID cannot be found in DB.
        '422':
          description: Incomplete LevelUp Entry information [OR] Ids doesn't match.
 
  /levelup/customer/{customerId}:
    get:
      summary: Retrieves the LevelUp entry for a given customer using customerId.
      parameters:
        - name: customerId
          in: path
          required: true
          description: Customer ID of the LevelUp entry you would like to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: A LevelUp Entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelUp'
        '404':
          description: LevelUp Entry ID cannot be found in DB.
          
components:
  schemas:
    LevelUp:
      properties:
        levelUpId:
          type: integer
        customerId:
          type: integer
        points:
          type: integer
        memberDate:
          type: string
      required: 
        - customerId
        - points
        - memberDate
