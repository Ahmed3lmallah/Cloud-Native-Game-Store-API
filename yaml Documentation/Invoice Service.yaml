openapi: 3.0.0
info:
  title: Invoice Service
  description:
    This is a microservice that contains all CRUD functionality for Invoices.
  version: 0.0.1
servers:
  - url: 'http://localhost:7002'
    description: Localhost - Port No. 7002
paths:
  /invoices:
    get:
      summary: Retrieves All Invoices from the database
      responses:
        '200':
          description: A list of Invoices.
          content:
            array:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
    post:
      summary: Creates a new Invoice entry.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '201':
          description: An Invoice Item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '422':
          description: Incomplete Invoice information.
          
  /invoices/{id}:
    get:
      summary: Retrieves the Invoice with the given ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the Invoice Item you would like to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: An Invoice Item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Invoice ID cannot be found in DB.
    
    delete:
      summary: Deletes the Invoice with the given ID.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the Invoice you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: success message.
          content:
            text/plain:
              schema:
                type: string
                example: "Invoice [1] deleted successfully!"
        '404':
          description: Invoice ID cannot be found in DB.
          
    put:
      summary: Update the Invoice with the given ID.
      parameters: 
        - name: id
          in: path
          required: true
          description: id of the Invoice you want to update
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '200':
          description: An Invoice Item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Invoice ID cannot be found in DB.
        '422':
          description: Incomplete Invoice information [OR] Ids doesn't match.
  
  /invoices/customer/{customerId}:
    get:
      summary: Retrieves All Invoices for a given customer by customer Id.
      parameters: 
        - name: customerId
          in: path
          required: true
          description: id of the customer you want to get invoices for.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: A list of Invoices.
          content:
            array:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'        
          
components:
  schemas:
    Invoice:
      properties:
        invoiceId:
          type: integer
        customerId:
          type: integer
        purchaseDate:
          type: string
        invoiceItems:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
      required: 
        - customerId
        - purchaseDate
        - invoiceItems
    InvoiceItem:
      properties:
        invoiceItemId:
          type: integer
        invoiceId:
          type: integer
        inventoryId:
          type: integer
        quantity:
          type: integer
        unitPrice:
          type: number
      required: 
        - inventoryId
        - quantity
        - unitPrice